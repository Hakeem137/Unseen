rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // users docs: public read for profile (username), but inbox only readable by authenticated owner
    match /users/{userId} {
      allow read: if true; // public profile data (you can tighten)
      match /inbox/{messageId} {
        allow create: if false; // no direct client writes to inbox (use Cloud Function)
        allow read, update, delete: if request.auth != null && request.auth.uid == userId;
      }
    }

    // moderation collection: only admins can read (isAdmin flag in users doc)
    match /moderation/{docId} {
      allow read: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
      allow write: if false; // only server functions should write
    }

    // rateLimits: only server writes/reads
    match /rateLimits/{ip} {
      allow read, write: if false;
    }

    // posts: users can create posts only if authenticated
    match /posts/{postId} {
      allow create: if request.auth != null && request.resource.data.authorUid == request.auth.uid;
      allow read: if true;
      allow update, delete: if false;
    }
  }
}
